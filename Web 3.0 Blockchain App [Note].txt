- Learn at https://www.youtube.com/watch?v=Wn_Kb3MR_cU
	Time Stamps üëá
	00:00:00 Intro
	00:17:04 Setup
	00:23:11 Navbar
	00:39:08 Welcome Section
	01:03:48 Blockchain
	02:10:51 Services Section
	02:21:53 Transactions
	03:07:20 Deployment
	
- H∆∞·ªõng d·∫´n Tailwind CSS v·ªõi React
	'https://www.youtube.com/watch?v=mSR-g4CxkE8'

- Mua host+domain ·ªü: 
	'hostinger.com'
	
--------------------------------------------------------------------------
* Setup
	- T·∫°o 2 folder ·ªü th∆∞ m·ª•c g·ªëc:
		'client'
		'smart_contract'
			
	- T·∫£i NodeJS
		- T·∫£i b·∫£n 'Recommended For Most Users' m·ªõi nh·∫•t t·∫°i 'https://nodejs.org/en/'
	
	- Truy c·∫≠p 'https://vitejs.dev/'
		> C√¥ng c·ª• giao di·ªán ng∆∞·ªùi d√πng th·∫ø h·ªá ti·∫øp theo. H√£y s·∫µn s√†ng cho m·ªôt m√¥i tr∆∞·ªùng ph√°t tri·ªÉn cu·ªëi c√πng c√≥ th·ªÉ b·∫Øt k·ªãp b·∫°n.
		> Vite l√† m√£ ngu·ªìn m·ªü mi·ªÖn ph√≠, ƒë∆∞·ª£c t·∫°o ra b·ªüi c√°c nh√† t√†i tr·ª£ tuy·ªát v·ªùi
		> Vite (t·ª´ ti·∫øng Ph√°p c√≥ nghƒ©a l√† "nhanh ch√≥ng", ph√°t √¢m l√†/vit/, nh∆∞ "veet") l√† m·ªôt c√¥ng c·ª• x√¢y d·ª±ng nh·∫±m m·ª•c ƒë√≠ch cung c·∫•p tr·∫£i nghi·ªám ph√°t tri·ªÉn nhanh h∆°n v√† g·ªçn g√†ng h∆°n cho c√°c d·ª± √°n web hi·ªán ƒë·∫°i
		
		- Get Started > 'https://vitejs.dev/guide/' > copy 'npm create vite@latest'
	
	- cd \client
	
	>>> npm create vite@latest
		- Ok to proceed? (y): y
		- Project name: ./
		- Select a framework: React
		- Select a variant: JavaScript
			> Done. Now run:
			  npm install
			  npm run dev
				  
	>>> npm install

	>>> npm run dev
		> VITE v3.1.3  ready in 514 ms
		  ‚ûú  Local:   http://localhost:5173/
		  ‚ûú  Network: use --host to expose
		  
	- Install nh·ªØng Extension cho VS Code
		- PostCSS Intellisense and Highlighting
			> Syntax highlighting and intellisense for PostCSS
			> Highlight cho code css/taiwindcss
		
		- Tailwind CSS IntelliSensePreview
			> Tailwind CSS IntelliSense n√¢ng cao tr·∫£i nghi·ªám ph√°t tri·ªÉn Tailwind b·∫±ng c√°ch cung c·∫•p cho ng∆∞·ªùi d√πng Visual Studio Code c√°c t√≠nh nƒÉng n√¢ng cao nh∆∞ t·ª± ƒë·ªông ho√†n th√†nh, t√¥ s√°ng c√∫ ph√°p v√† linting
			> T·ª± ƒë·ªông g·ª£i √Ω class cho taiwindcss
		  
	- Truy c·∫≠p 'http://localhost:5173/'
	
	- Truy c·∫≠p 'https://tailwindcss.com/docs/installation/using-postcss'
		> Tailwind gi√∫p x√¢y d·ª±ng giao di·ªán website m·ªôt c√°ch nhanh ch√≥ng th√¥ng qua c√°c thu·ªôc t√≠nh Css ƒë√£ ƒë∆∞·ª£c vi·∫øt th√†nh nh·ªØng Class ri√™ng, v√† vi·ªác c·ªßa ch√∫ng ta l√† g·ªçi c√°c Class ƒë√≥ ra ƒë·ªÉ s·ª≠ d·ª•ng. ƒêi·ªÅu n√†y s·∫Ω gi√∫p c√°c b·∫°n ki·ªÉm so√°t ƒë∆∞·ª£c l∆∞·ª£ng code css c≈©ng nh∆∞ d·ªÖ d√†ng lo·∫°i b·ªè nh·ªØng g√¨ kh√¥ng d√πng ƒë·∫øn
		
		>>> npm install -D tailwindcss postcss autoprefixer
		>>> npx tailwindcss init -p
			> tr√™n site th√¨ tailwindcss v3.1.8 cung c·∫•p cli 'npx tailwindcss init', kh√¥ng ph·∫£i nh∆∞ trong video l√† 'npx tailwindcss init -p' 
			> ta v·∫´n d√πng 'npx tailwindcss init -p' nh∆∞ trong video th√¨ n√≥ m·ªõi t·∫°o ƒë∆∞·ª£c file 'client\postcss.config.cjs'
		
		- Update 'client\tailwind.config.cjs'
			- Thay n·ªôi dung file b·∫±ng code n√†y (Copy content ·ªü ƒë√¢y 'https://tailwindcss.com/docs/installation/using-postcss' ho·∫∑c 'https://tailwindcss.com/docs/guides/vite')
				/** @type {import('tailwindcss').Config} */
				module.exports = {
				  content: [
					"./index.html",
					"./src/**/*.{js,ts,jsx,tsx}",
				  ],
				  theme: {
					extend: {},
				  },
				  plugins: [],
				}
			
		- Update 'client\src\index.css'
			- Thay n·ªôi dung file b·∫±ng code n√†y (Copy content ·ªü ƒë√¢y 'https://tailwindcss.com/docs/installation/using-postcss')
				@tailwind base;
				@tailwind components;
				@tailwind utilities;
				
		- Update 'client\src\App.jsx'
			const App = () => {

			  return (
				<div className="App">
				  <h1 class="text-3xl font-bold underline">
					Hello world!
				  </h1>
				</div>
			  )
			}

			export default App
			
		- Ch·∫°y th·ª≠ xem k·∫øt qu·∫£
			>>> npm run dev
			
	
	- cd ..
	- cd .\smart_contract\
	
	>>> npm init -y
		> S·∫Ω t·∫°o ra file 'smart_contract\package.json'
	
--------------------------------------------------------------------------
* T·∫°o Navbar
	- T·∫°o file 'client\src\components\Navbar.jsx'
		const Navbar = () => {
			return (
				<h1>Navbar</h1>
			)
		}

		export default Navbar
		
	- T·∫°o file 'client\src\components\Footer.jsx'
		const Footer = () => {
			return (
				<h1>Footer</h1>
			)
		}

		export default Footer
		
	- T·∫°o 'client\src\components\Loader.jsx'
		const Loader = () => {
			return (
				<h1>Loader</h1>
			)
		}

		export default Loader
		
	- T·∫°o file 'client\src\components\Services.jsx'
		const Services = () => {
			return (
				<h1>Services</h1>
			)
		}

		export default Services
		
	- T·∫°o file 'client\src\components\Transactions.jsx'
		const Transactions = () => {
			return (
				<h1>Transactions</h1>
			)
		}

		export default Transactions
		
	- T·∫°o file 'client\src\components\Welcome.jsx'
		const Welcome = () => {
			return (
				<h1>Welcome</h1>
			)
		}

		export default Welcome
		
	- T·∫°o file 'client\src\components\index.js'
		export {default as Loader} from './Loader'
		export {default as Navbar} from './Navbar'
		export {default as Footer} from './Footer'
		export {default as Welcome} from './Welcome'
		export {default as Transactions} from './Transactions'
		export {default as Services} from './Services'
		
	- Update 'client\src\App.jsx'
		import {Navbar, Welcome, Footer, Services, Transactions} from './components'

		const App = () => {

		  return (
			<div className="min-h-screen">
			  <div className="gradient-bg-welcome">
				<Navbar/>
				<Welcome/>
			  </div>
			  <Services/>
			  <Transactions/>
			  <Footer/>
			</div>
		  )
		}

		export default App
		
		> Ref 'https://tailwindcss.com/docs/min-height'
			
	- Ch·∫°y th·ª≠ xem k·∫øt qu·∫£
		>>> npm run dev
		
	- T·∫°o files
		'client\images\logo.png'
		'client\images\hello.svg'
		'client\images\animated.svg'
		
	>>> npm i react-icons
		> Bao g·ªìm c√°c bi·ªÉu t∆∞·ª£ng ph·ªï bi·∫øn trong c√°c d·ª± √°n React c·ªßa b·∫°n m·ªôt c√°ch d·ªÖ d√†ng v·ªõi c√°c bi·ªÉu t∆∞·ª£ng ph·∫£n ·ª©ng, s·ª≠ d·ª•ng nh·∫≠p ES6 cho ph√©p b·∫°n ch·ªâ bao g·ªìm c√°c bi·ªÉu t∆∞·ª£ng m√† d·ª± √°n c·ªßa b·∫°n ƒëang s·ª≠ d·ª•ng. ref 'https://www.npmjs.com/package/react-icons'
		
	>> npm i ethers
		> install tr∆∞·ªõc, kh·∫£ nƒÉng s·∫Ω d√πng cho eth crypto
		
	- Update 'client\src\components\Navbar.jsx'
		import {useState} from 'react'
		import {HiMenuAlt4} from 'react-icons/hi'
		import {AiOutlineClose} from 'react-icons/ai'

		import logo from '../../images/logo.png'

		const NavbarItem = ({title, classProps}) => {
			return (
				<li className={`mx-4 cursor-pointer ${classProps}`}>
					{title}
				</li>
			)
		}

		const Navbar = () => {
			const [toggleMenu, setToggleMenu] = useState(false)

			return (
				<nav className='w-full flex md:justify-center justify-between items-center p-4'>
					<div className='md:flex-[0.5] flex-initial justify-center items-center'>
						<img src={logo} alt='logo' className='w-32 cursor-pointer' />
					</div>
					<ul className='text-white md:flex hidden list-row justify-between items-center flex-initial'>
						{['Market', 'Exchange', 'Tutorials', 'Wallets'].map((item, index) => (
							<NavbarItem key={item+index} title={item} />
						))}
						<li className='bg-[#2952e3] py-2 px-7 mx-4 rounded-full cursor-pointer hover:bg-[#2546bd]'>
							Login
						</li>
					</ul>
					<div className='flex '>
						{toggleMenu
							? <AiOutlineClose fontSize={28} className='text-white md:hidden cursor-pointer' onClick={() => setToggleMenu(false)} />
							: <HiMenuAlt4 fontSize={28} className='text-white md:hidden cursor-pointer' onClick={() => setToggleMenu(true)} />
						}  
						
						{toggleMenu && (
							<ul
								className='z-10 fixed top-0 -right-2 p-3 w-[70vw] h-screen shadow-2xl md:hidden list-none
									flex flex-col justify-start items-end rounded-md blue-glassmorphism
									text-white animate-slide-in
								'
							>
								<li className='text-xl w-full my-2'>
									<AiOutlineClose className='cursor-pointer' onClick={() => setToggleMenu(false)} />
								</li>
								{['Market', 'Exchange', 'Tutorials', 'Wallets'].map((item, index) => (
									<NavbarItem key={item+index} title={item}  classProps='my-2 text-lg'/>
								))}
							</ul>
						)}
					</div>
				</nav>
			)
		}

		export default Navbar
		
		
		> Ref:
			w-full: 'https://tailwindcss.com/docs/width#percentage-widths'
			flex: 'https://tailwindcss.com/docs/flex'
			justify-center justify-between: 'https://tailwindcss.com/docs/justify-content'
			items-center: 'https://tailwindcss.com/docs/align-items#center'
			Viewport Width (vw): ƒê∆°n v·ªã n√†y d·ª±a tr√™n chi·ªÅu r·ªông c·ªßa khung nh√¨n. Gi√° tr·ªã 1vw b·∫±ng 1% chi·ªÅu r·ªông khung nh√¨n
			h-screen: Chi·ªÅu cao khung nh√¨n. S·ª≠ d·ª•ng m√†n h√¨nh h ƒë·ªÉ t·∫°o m·ªôt ph·∫ßn t·ª≠ k√©o d√†i to√†n b·ªô chi·ªÅu cao c·ªßa khung nh√¨n
			rounded-md:	border-radius: 0.375rem; /* 6px */ 'https://tailwindcss.com/docs/border-radius'
			blue-glassmorphism: Glassmorphism l√† m·ªôt phong c√°ch thi·∫øt k·∫ø, ƒë∆∞·ª£c ƒë·∫∑t ra b·ªüi Michal Malewicz t·ª´ Hype4.Academy ƒë·ªÉ k·∫øt n·ªëi v√† k·∫øt h·ª£p t·∫•t c·∫£ c√°c c√¥ng d·ª•ng c·ªßa hi·ªáu ·ª©ng 'k√≠nh m·ªù' trong giao 	di·ªán ng∆∞·ªùi d√πng ...
			flex-1: S·ª≠ d·ª•ng flex-1 ƒë·ªÉ cho ph√©p m·ªôt m·ª•c flex ph√°t tri·ªÉn v√† thu nh·ªè khi c·∫ßn thi·∫øt, b·ªè qua k√≠ch th∆∞·ªõc ban ƒë·∫ßu c·ªßa n√≥:
			
			> Flex css l√† m·ªôt ki·ªÉu d√†n trang m√† khi s·ª≠ d·ª•ng n√≥ s·∫Ω t·ª± c√¢n ƒë·ªëi k√≠ch th∆∞·ªõc c·ªßa c√°c th√†nh ph·∫ßn ƒë·ªÉ hi·ªÉn th·ªã trong m·ªçi thi·∫øt b·ªã. ƒêi·ªÅu ƒë√≥ c√≥ nghƒ©a l√† b·∫°n kh√¥ng c·∫ßn ng·ªìi cƒÉn ch·ªânh k√≠ch th∆∞·ªõc ph·∫ßn t·ª≠, kh√¥ng c·∫ßn ng·ªìi float ch·ªâ c·∫ßn thi·∫øt l·∫≠p n√≥ theo chi·ªÅu ngang d·ªçc l√† l√∫c ƒë√≥ c√°c ph·∫ßn t·ª≠ b√™n trong s·∫Ω t·ª± hi·ªÉn th·ªã theo mong mu·ªën. Ref 'https://tenten.vn/tin-tuc/flex-css/#:~:text=Flex%20css%20l%C3%A0%20m%E1%BB%99t%20ki%E1%BB%83u,hi%E1%BB%83n%20th%E1%BB%8B%20theo%20mong%20mu%E1%BB%91n.'
	
--------------------------------------------------------------------------
* Welcome Section
	- Update 'client\src\components\Loader.jsx'
		const Loader = () => {
			return (
				<div className="flex justify-center items-center py-3">
					<div className="animate-spin rounded-full h-32 w-32 border-b-2 border-red-700" />
				</div>
			)
		}

		export default Loader
		
	- Update 'client\src\components\Welcome.jsx'
		import {AiFillPlayCircle} from 'react-icons/ai'
		import {SiEthereum} from 'react-icons/si'
		import {BsInfoCircle} from 'react-icons/bs'

		import {Loader} from './'

		const commonStyles = 'min-h-[70px] sm:px-0 px-2 sm:min-w-[120px] flex justify-center items-center border-[0.5px] border-gray-400 text-white'


		const Input = ({placeholder, name, type, value, handleChange}) => (
			<input
				placeholder={placeholder}
				type={type}
				step='0.0001'
				value={value}
				onChange={(e) => handleChange(e, name)}
				className='my-2 w-full rounded-sm p-2 outline-none bg-transparent text-white border-none text-sm white-glassmorphism'
			/>
		)


		const Welcome = () => {

			const connectWallet = () => {

			}

			const handleSubmit = () => {

			}

			return (
				<div className='flex w-full justify-center items-center'>
					<div className='flex mf:flex-row flex-col items-start justify-between md:p-20 py-12 px-4'>
						<div className='flex flex-1 justify-start flex-col mf:mr-10'>
							<h1 className='text-3xl sm:text-5xl text-white text-gradient py-1'>
								Send Crypto <br/> across the world
							</h1>
							<p className='text-left mt-5 text-white font-light md:w-9/12 w-11/12 text-base'>
								Expore the crypto world. Buy and sell cryptocurrencies easily on Kcrypto.
							</p>
							<button
								type='button'
								onClick={connectWallet}
								className='flex flex-row justify-center items-center my-5 bg-[#2952e3] p-3 rounded-full cursor-pointer hover:bg-[#2546bd]'
							>
								<p className='text-white text-base font-semibold'>Connect Wallet</p>
							</button>

							<div className='grid sm:grid-cols-3 grid-cols-2 w-full mt-10'>
								<div className={`rounded-tl-2xl ${commonStyles}`}>
									Reliability
								</div>
								<div className={commonStyles}>
									Security
								</div>
								<div className={`rounded-tr-2xl ${commonStyles}`}>
									Ethereum
								</div>
								<div className={`rounded-bl-2xl ${commonStyles}`}>
									Web 3.0
								</div>
								<div className={commonStyles}>
									Low fees
								</div>
								<div className={`rounded-br-2xl ${commonStyles}`}>
									Blockchain
								</div>
							</div>
						</div>

						<div className='flex flex-col flex-1 items-center justify-start w-full mf:mt-0 mt-10'>
							<div className='p-3 justify-end items-start flex-col rounded-xl h-40 sm:w-72 w-full my-5 eth-card white-glassmorphism'>
								<div className='flex justify-between flex-col w-full h-full'>
									<div className='flex justify-between items-start'>
										<div className='w-10 h-10 rounded-full border-2 border-white flex justify-center items-center'>
											<SiEthereum fontSize={21} color="#fff" />
										</div>
										<BsInfoCircle fontSize={17} color='#fff' />
									</div>
									<div>
										<p className='text-white font-light text-sm'>
											Address
										</p>
										<p className='text-white font-semibold text-lg mt-1'>
											Ethereum
										</p>
									</div>
								</div>
							</div>

							<div className='p-5 sm:w-96 w-full flex flex-col justify-start items-center blue-glassmorphism'>
								<Input placeholder='Address To' name='addressTo' type='text' handleChange={() => {}} />
								<Input placeholder='Amount (ETH)' name='amount' type='number' handleChange={() => {}} />
								<Input placeholder='Keyword (Gif)' name='keyword' type='text' handleChange={() => {}} />
								<Input placeholder='Enter Message' name='message' type='text' handleChange={() => {}} />

								<div className='h-[1px] w-full bg-gray-400 my-2' />

								{false ? (
									<Loader />
								) : (
									<button
										type='button'
										onClick={handleSubmit}
										className='text-white w-full mt-2 border-[1px] p-2 border-[#3d4f7c] rounded-full cursor-pointer'
									>
										Send Now
									</button>
								)}
							</div>
						</div>
					</div>
				</div>
			)
		}

		export default Welcome
		
	- Update 'client\tailwind.config.cjs'
		/** @type {import('tailwindcss').Config} */
		module.exports = {
		  content: [
			"./index.html",
			"./src/**/*.{js,ts,jsx,tsx}",
		  ],
		  theme: {
			fontFamily: {
			  display: ["Open Sans", "sans-serif"],
			  body: ["Open Sans", "sans-serif"],
			},
			extend: {
			  screens: {
				mf: "990px",
			  },
			  keyframes: {
				"slide-in": {
				  "0%": {
					"-webkit-transform": "translateX(120%)",
					transform: "translateX(120%)",
				  },
				  "100%": {
					"-webkit-transform": "translateX(0%)",
					transform: "translateX(0%)",
				  },
				},
			  },
			  animation: {
				"slide-in": "slide-in 0.5s ease-out",
			  },
			},
		  },
		  variants: {
			extend: {},
		  },
		  plugins: [],
		}
		
	- Blockchain
		>>> cd smart_contract
		>>> npm install --save-dev hardhat @nomiclabs/hardhat-waffle ethereum-waffle chai @nomiclabs/hardhat-ethers ethers
			> T·∫°i sao ph·∫£i s·ª≠ d·ª•ng HARDHAT
				> Hardhat l√† c√¥ng c·ª• Ethereum th·∫ø h·ªá ti·∫øp theo
				> Ch·∫°y Solidity c·ª•c b·ªô: D·ªÖ d√†ng tri·ªÉn khai h·ª£p ƒë·ªìng c·ªßa b·∫°n, ch·∫°y th·ª≠ nghi·ªám v√† g·ª° l·ªói m√£ Solidity m√† kh√¥ng c·∫ßn x·ª≠ l√Ω m√¥i tr∆∞·ªùng tr·ª±c ti·∫øp. M·∫°ng Hardhat l√† m·ªôt m·∫°ng Ethereum c·ª•c b·ªô ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ph√°t tri·ªÉn.
				> G·ª° l·ªói-ƒë·∫ßu ti√™n: Hardhat l√† l·ª±a ch·ªçn t·ªët nh·∫•t ƒë·ªÉ g·ª° l·ªói Solidity. B·∫°n nh·∫≠n ƒë∆∞·ª£c d·∫•u v·∫øt ngƒÉn x·∫øp Solidity, console.log v√† th√¥ng b√°o l·ªói r√µ r√†ng khi giao d·ªãch kh√¥ng th√†nh c√¥ng.
			> ref 'https://hardhat.org/'
			
		- File 'smart_contract\package.json' c√†i xong ·ªü tr√™n ƒë∆∞·ª£c c·∫≠p nh·∫≠t nh∆∞ n√†y:
			{
			  "name": "smart_contract",
			  "version": "1.0.0",
			  "description": "",
			  "main": "index.js",
			  "scripts": {
				"test": "echo \"Error: no test specified\" && exit 1"
			  },
			  "keywords": [],
			  "author": "",
			  "license": "ISC",
			  "devDependencies": {
				"@nomiclabs/hardhat-ethers": "^2.1.1",
				"@nomiclabs/hardhat-waffle": "^2.0.3",
				"chai": "^4.3.6",
				"ethereum-waffle": "^3.4.4",
				"ethers": "^5.7.1",
				"hardhat": "^2.11.2"
			  }
			}

		>>> npx hardhat
			- What do you want to do?: Ch·ªçn 'Create a JavaScript project'
			- Hardhat project root: ƒê·ªÉ m·∫∑c ƒë·ªãnh r·ªìi nh·∫•n Enter
			- Do you want to add a .gitignore? (Y/n): Ch·ªçn 'y'
					> Project ƒë∆∞·ª£c t·∫°p v·ªõi c√°c th∆∞ m·ª•c v√† c√°c file
					> Message th√¥ng b√°o 
						You need to install these dependencies to run the sample project:  
						npm install --save-dev "hardhat@^2.11.2" "@nomicfoundation/hardhat-toolboxt-toolbox@^2.0.0"
						
		>>> npm install --save-dev "hardhat@^2.11.2" "@nomicfoundation/hardhat-toolbox@^2.0.0"
			> Check file 'smart_contract\package.json' ƒë·ªÉ xem "@nomicfoundation/hardhat-toolbox": "^2.0.0", ƒë√£ ƒë∆∞·ª£c th√™m v√†o
					
		>>> npx hardhat test
		
		- Install 'solidity' trong VS Code 
			> Ethereum Solidity Language for Visual Studio Code
			> Solidity is the language used in Ethereum to create smart contracts
			
		- T·∫°o file 'smart_contract\contracts\Transactions.sol'
			> X·ª≠ l√Ω c√°c giao d·ªãch cho blockchain
			- Code:
				//SPDX-License-Identifier: UNLICENSED

				pragma solidity ^0.8.0;

				contract Transactions {
					uint256 transactionCount;

					event Transfer(address from, address receiver, uint amount, string message, uint256 timestamp, string keyword);

					struct TransferStruct {
						address sender;
						address receiver;
						uint amount;
						string message;
						uint256 timestamp;
						string keyword;
					}

					TransferStruct[] transactions;

					function addToBlockChain(address payable receiver, uint amount, string memory message, string memory keyword) public {
						transactionCount += 1;
						transactions.push(TransferStruct(msg.sender, receiver, amount, message, block.timestamp, keyword));

						//Transfer(from, receiver, amount, message, timestamp, keyword)
						emit Transfer(msg.sender, receiver, amount, message, block.timestamp, keyword);
					}

					function getAllBlockChains() public view returns (TransferStruct[] memory) {
						return transactions;
					}

					function getBlockChainCount() public view returns (uint256) {
						return transactionCount;
					}
				}
				
		- Update 'smart_contract\scripts\deploy.js'
			> Deploy c√°i Transactions ƒë√£ vi·∫øt ·ªü tr√™n
			- C·∫≠p nh·∫≠t Code l·∫°i nh∆∞ sau:
				const hre = require("hardhat");

				const main = async () => {
				  const Transactions = await hre.ethers.getContractFactory("Transactions");
				  const transactions = await Transactions.deploy();

				  await transactions.deployed();

				  console.log("Transactions deployed to: ", transactions.address);
				}

				const runMain = async () => {
				  try {
					await main();
					process.exit(0);
				  } catch (error) {
					console.error(error);
					process.exit(1);
				  }
				}

				runMain();
				
		- [TestNet] ETH mi·ªÖn ph√≠
			> Ropsten l√† b·∫£n testnet ph·ªï bi·∫øn nh·∫•t c·ªßa Ethereum v√† th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng l√†m m·∫°ng th·ª≠ nghi·ªám cho c√°c nh√† ph√°t tri·ªÉn t·∫°o dApp c·ªßa ri√™ng h·ªç tr√™n Ethereum blockchain.
			> Search google t·ª´ kh√≥a "ropsten faucet" ƒë·ªÉ ch·ªçn 1 site
				'https://faucet.rinkeby.io/'
				
				> Ref m·ªôt v√†i site kh√°c:
					https://ropsten.chain.link/
					https://faucet.dimensions.network/
					https://faucet-sokol.herokuapp.com/
					
		- MetaMask
			> MetaMask l√† m·ªôt v√≠ ti·ªÅn ƒëi·ªán t·ª≠ ph·∫ßn m·ªÅm ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi chu·ªói kh·ªëi Ethereum. N√≥ cho ph√©p ng∆∞·ªùi d√πng truy c·∫≠p v√≠ Ethereum c·ªßa h·ªç th√¥ng qua ti·ªán √≠ch m·ªü r·ªông tr√¨nh duy·ªát ho·∫∑c ·ª©ng d·ª•ng di ƒë·ªông, sau ƒë√≥ c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi c√°c ·ª©ng d·ª•ng phi t·∫≠p trung.
			
			- V√†o Chrome Store search extension 'metamask' v√† install:
				'https://chrome.google.com/webstore/category/extensions'
				
			- T·∫£i xong click bi·ªÉu t∆∞·ª£ng metamask ·ªü chrome r·ªìi:
				- Click 'Get started'
				- Help us improve MetaMask: ch·ªçn 'I agree'
				- Click 'Create a wallet'
					- ƒê·∫∑t m·∫≠t kh·∫©u: 12345678
					- Click 'Create'